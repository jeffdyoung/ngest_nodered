{"version":3,"sources":["coordinator/edgeNodes.js"],"names":["toCamelCase","EdgeNodes","sdk","request","baseUrl","organizationId","_baseUrl","_request","_sdk","_organizationId","edgeNodeClientId","Promise","reject","Error","get","then","edgeNode"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA;;;;;;;;;;;AAWA;;;;;;IAKMC,S;AACJ;;;;;;AAMA,qBAAYC,GAAZ,EAAiBC,OAAjB,EAA0BC,OAA1B,EAA0D;AAAA,QAAvBC,cAAuB,uEAAN,IAAM;;AAAA;;AACxD,SAAKC,QAAL,GAAgBF,OAAhB;AACA,SAAKG,QAAL,GAAgBJ,OAAhB;AACA,SAAKK,IAAL,GAAYN,GAAZ;AACA,SAAKO,eAAL,GAAuBJ,cAAvB;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;wBAoBIA,c,EAAgBK,gB,EAAkB;AACpC,UAAI,KAAKD,eAAT,EAA0B;AACxB,YAAI,CAACC,gBAAL,EAAuB;AACrB,iBAAOC,QAAQC,MAAR,CACL,IAAIC,KAAJ,CAAU,2DAAV,CADK,CAAP;AAGD;;AAED,eAAO,KAAKN,QAAL,CACJO,GADI,CACG,KAAKR,QADR,mBAC8BI,gBAD9B,EAEJK,IAFI,CAEC,UAACC,QAAD;AAAA,iBAAchB,YAAYgB,QAAZ,CAAd;AAAA,SAFD,CAAP;AAGD;;AAED,UAAI,CAACX,cAAL,EAAqB;AACnB,eAAOM,QAAQC,MAAR,CACL,IAAIC,KAAJ,CAAU,yDAAV,CADK,CAAP;AAGD;;AAED,UAAI,CAACH,gBAAL,EAAuB;AACrB,eAAOC,QAAQC,MAAR,CACL,IAAIC,KAAJ,CAAU,2DAAV,CADK,CAAP;AAGD;;AAED,aAAO,KAAKN,QAAL,CACJO,GADI,CAGD,KAAKR,QAHJ,uBAIeD,cAJf,mBAI2CK,gBAJ3C,EAMJK,IANI,CAMC,UAACC,QAAD;AAAA,eAAchB,YAAYgB,QAAZ,CAAd;AAAA,OAND,CAAP;AAOD;;;;;;AAGH,eAAef,SAAf","file":"edgeNodes.js","sourcesContent":["import { toCamelCase } from '../utils/objects';\n\n/**\n * @typedef {Object} EdgeNode\n * @param {string} clientId\n * @param {string} createdAt ISO 8601 Extended Format date/time string\n * @param {string} [description]\n * @param {string} id UUID\n * @param {string} name\n * @param {string} organizationId UUID\n * @param {string} updatedAt ISO 8601 Extended Format date/time string\n */\n\n/**\n * Module that provides access to contxt edge nodes\n *\n * @typicalname contxtSdk.coordinator.edgeNodes\n */\nclass EdgeNodes {\n  /**\n   * @param {Object} sdk An instance of the SDK so the module can communicate with other modules\n   * @param {Object} request An instance of the request module tied to this module's audience.\n   * @param {string} baseUrl The base URL provided by the parent module\n   * @param {string} [organizationId] The organization ID to be used in tenant url requests\n   */\n  constructor(sdk, request, baseUrl, organizationId = null) {\n    this._baseUrl = baseUrl;\n    this._request = request;\n    this._sdk = sdk;\n    this._organizationId = organizationId;\n  }\n\n  /**\n   * Get an edge node\n   *\n   * Legacy API Endpoint: '/organizations/:organizationId/edgenodes/:edgeNodeClientId'\n   * API Endpoint: 'edgenodes/:edgeNodeClientId'\n   * METHOD: GET\n   *\n   * @param {string} organizationId The ID of the organization, optional when using the tenant API and an organization ID has been set\n   * @param {string} edgeNodeClientId\n   *\n   * @returns {Promise}\n   * @fulfill {EdgeNode}\n   * @reject {Error}\n   *\n   * @example\n   * contxtSdk.coordinator.edgeNodes\n   *   .get('59270c25-4de9-4b22-8e0b-ab287ac344ce', 'abc123')\n   *   .then((edgeNode) => console.log(edgeNode))\n   *   .catch((err) => console.log(err));\n   */\n  get(organizationId, edgeNodeClientId) {\n    if (this._organizationId) {\n      if (!edgeNodeClientId) {\n        return Promise.reject(\n          new Error('An edgeNodeClientId is required for getting an edge node.')\n        );\n      }\n\n      return this._request\n        .get(`${this._baseUrl}/edgenodes/${edgeNodeClientId}`)\n        .then((edgeNode) => toCamelCase(edgeNode));\n    }\n\n    if (!organizationId) {\n      return Promise.reject(\n        new Error('An organizationId is required for getting an edge node.')\n      );\n    }\n\n    if (!edgeNodeClientId) {\n      return Promise.reject(\n        new Error('An edgeNodeClientId is required for getting an edge node.')\n      );\n    }\n\n    return this._request\n      .get(\n        `${\n          this._baseUrl\n        }/organizations/${organizationId}/edgenodes/${edgeNodeClientId}`\n      )\n      .then((edgeNode) => toCamelCase(edgeNode));\n  }\n}\n\nexport default EdgeNodes;\n"]}