{"version":3,"sources":["utils/events/formatEventUpdateToServer.js"],"names":["formatEventUpdateToServer","input","facility_id","facilityId","is_public","isPublic","name"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAiBA,SAASA,yBAAT,GAA+C;AAAA,MAAZC,KAAY,uEAAJ,EAAI;;AAC7C,SAAO;AACLC,iBAAaD,MAAME,UADd;AAELC,eAAWH,MAAMI,QAFZ;AAGLC,UAAML,MAAMK;AAHP,GAAP;AAKD;;AAED,eAAeN,yBAAf","file":"formatEventUpdateToServer.js","sourcesContent":["/**\n * Normalizes the event update object being sent to the API server\n *\n * NOTE: This endpoint specifically whitelists the keys below as the only\n * allowed keys. We are using this formatter versus the generic `toSnakeCase` so\n * that this endpoint behaves the same as others (as in, it does not throw an\n * error if passing in extra information beyond what is listed in the JSDocs).\n *\n * @param {Event} input\n *\n * @returns {Object} output\n * @returns {string} [output.facility_id]\n * @returns {boolean} [output.is_public]\n * @returns {string} [output.name]\n *\n * @private\n */\nfunction formatEventUpdateToServer(input = {}) {\n  return {\n    facility_id: input.facilityId,\n    is_public: input.isPublic,\n    name: input.name\n  };\n}\n\nexport default formatEventUpdateToServer;\n"]}