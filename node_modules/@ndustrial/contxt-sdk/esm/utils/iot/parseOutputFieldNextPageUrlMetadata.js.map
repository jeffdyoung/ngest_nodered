{"version":3,"sources":["utils/iot/parseOutputFieldNextPageUrlMetadata.js"],"names":["URL","parseOutputFieldNextPageUrlMetadata","url","query","reduce","memo","key","parseInt"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,SAASC,mCAAT,CAA6CC,GAA7C,EAAkD;AAChD,MAAMC,QAAQ,IAAIH,GAAJ,CAAQE,GAAR,EAAa,IAAb,EAAmBC,KAAjC;;AAEA,SAAO,CAAC,OAAD,EAAU,SAAV,EAAqB,WAArB,EAAkC,QAAlC,EAA4CC,MAA5C,CAAmD,UAACC,IAAD,EAAOC,GAAP,EAAe;AACvE,QAAID,KAAKC,GAAL,CAAJ,EAAe;AACbD,WAAKC,GAAL,IAAYC,SAASF,KAAKC,GAAL,CAAT,EAAoB,EAApB,CAAZ;AACD;;AAED,WAAOD,IAAP;AACD,GANM,EAMJF,KANI,CAAP;AAOD;;AAED,eAAeF,mCAAf","file":"parseOutputFieldNextPageUrlMetadata.js","sourcesContent":["import URL from 'url-parse';\n\n/**\n * Parses metadata from the provided url. Will coerce fields that should be\n * numbers from `String` to `Number`\n *\n * @param {String} url\n *\n * @returns {Object} output\n * @returns {Number} [output.limit] Number of records to return\n * @returns {Number} [output.timeEnd] UNIX timestamp indicating the end of the\n *   query window\n * @returns {Number} [output.timeStart] UNIX timestamp indicating the start of\n *   the query window\n * @returns {Number} [output.window] The sampling window for records.\n *   Required if including a timeEnd or timeStart.\n *   Valid options include: `0`, `60`, `900`, and `3600`\n *\n * @private\n */\nfunction parseOutputFieldNextPageUrlMetadata(url) {\n  const query = new URL(url, true).query;\n\n  return ['limit', 'timeEnd', 'timeStart', 'window'].reduce((memo, key) => {\n    if (memo[key]) {\n      memo[key] = parseInt(memo[key], 10);\n    }\n\n    return memo;\n  }, query);\n}\n\nexport default parseOutputFieldNextPageUrlMetadata;\n"]}